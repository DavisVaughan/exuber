% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mc_cv.R
\name{mc_cv}
\alias{mc_cv}
\alias{mc_distr}
\title{Monte Carlo Critical Values}
\usage{
mc_cv(n, minw = NULL, nrep = 500L, seed = NULL)

mc_distr(n, minw = NULL, nrep = 500L, seed = NULL)
}
\arguments{
\item{n}{A positive integer. The sample size.}

\item{minw}{A positive integer. The minimum window size, which defaults to
\eqn{(0.01 + 1.8/\sqrt(T))*T}{(0.01 + 1.8 / \sqrtT)*T}.}

\item{nrep}{A positive integer. The number of Monte Carlo simulations.}

\item{seed}{An object specifying if and how the random number generator(rng)
should be initialized. Either NULL or an integer will be used in a call to
\code{set.seed} before simulation. If set, the value is save as "seed" attribute
of the returned value. The default, NULL will note change the rng state, and
return .Random.seed as the "seed" attribute. Results between seeds in parallel
and non-parallel differ.}
}
\value{
A list that contains the critical values for ADF, BADF, BSADF and GSADF
t-statistics.
}
\description{
\code{mc_cv} computes Monte Carlo critical values for the recursive unit
root tests. \code{mc_dist} computes the distribution.
}
\examples{
\donttest{
# Default minimum window
mc <- mc_cv(n = 100)

tidy(mc)

# Change the minimum window and the number of simulations
mc2 <- mc_cv(n = 100, nrep = 600, minw = 20)

tidy(mc2)

mdist <- mc_distr(n = 100, nrep = 1000)

autoplot(mdist)
}
}
\seealso{
\code{\link{wb_cv}} for Wild Bootstrapped critical values and
\code{\link{sb_cv}} for Sieve Bootstrapped critical values
}

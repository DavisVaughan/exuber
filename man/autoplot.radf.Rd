% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoplot.R
\name{autoplot.radf}
\alias{autoplot.radf}
\alias{shade}
\title{Plotting and tidying radf objects}
\usage{
\method{autoplot}{radf}(
  object,
  cv = NULL,
  include_rejected = FALSE,
  select_series = NULL,
  option = c("gsadf", "sadf"),
  shade_opt = shade(),
  ...
)

shade(min_duration = NULL, shade_color = "grey70", opacity = 0.5, ...)
}
\arguments{
\item{object}{An object of class \code{\link[=radf]{radf()}}.}

\item{cv}{An object of class "cv". The output of \code{\link[=mc_cv]{mc_cv()}},
\code{\link[=wb_cv]{wb_cv()}} or \code{\link[=sb_cv]{sb_cv()}}}

\item{include_rejected}{If not FALSE, plot all variables regardless of rejecting the NULL at the 5\\% significance level.}

\item{select_series}{If not NULL, only plot with names or column number matching this regular expression will be executed.}

\item{option}{Whether to apply the "gsadf" or "sadf" methodology. Default is}

\item{shade_opt}{options for the shading of the graph, usually used through \code{shade} functions.}

\item{...}{further arguments passed to \code{ggplot2::facet_wrap} and \code{ggplot2::geom_rect} for \code{shade}.}

\item{min_duration}{the minimum duration.}

\item{shade_color}{the shade color that indicates the exuberance periods. Defaults
to grey70.}

\item{opacity}{the opacity of the shade color aka alpha.}
}
\description{
\code{autoplot.radf} takes an \code{radf} object and returns a facetted ggplot object.
\code{shade}
}
\examples{
\donttest{
autoplot(radf_dta)

# Modify facet_wrap options through ellipsis
autoplot(radf_dta, scales = "free", direction  = "v")

autoplot(radf_dta, shade_opt = shade(shade_color = "pink", opacity = 0.3))

# Change color, size or linetype
autoplot(radf_dta) +
  scale_color_manual(values = c("black", "black")) +
  scale_size_manual(values = c(1.2, 1))
  scale_linetype_manual(values = c("solid", "solid"))

# Change names through ellipsis
custom_labels <- c("psy1" = "new_name_for_psy1", "psy2" = "new_name_for_psy2")
autoplot(radf_dta, labeller = labeller(id = as_labeller(custom_labels)))

# Change Theme options
}

}
